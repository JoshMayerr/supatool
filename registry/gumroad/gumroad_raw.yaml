openapi: 3.0.3
info:
  title: Gumroad OAuth API
  description: API for interacting with Gumroad's products, sales, subscribers, and licenses.
  version: 1.0.0
servers:
  - url: https://api.gumroad.com/v2
    description: Gumroad API v2

components:
  securitySchemes:
    OAuth2:
      type: oauth2
      flows:
        authorizationCode:
          authorizationUrl: https://gumroad.com/oauth/authorize
          tokenUrl: https://gumroad.com/oauth/token
          scopes:
            view_profile: "read-only access to the user's public information and products."
            edit_products: "read/write access to the user's products and their variants, offer codes, and custom fields."
            view_sales: "read access to the user's products' sales information, including sales counts."
            mark_sales_as_shipped: "write access to mark the user's products' sales as shipped."
            refund_sales: "write access to refund the user's products' sales."

security:
  - OAuth2: []

paths:
  /products:
    get:
      summary: Retrieve all products
      description: Retrieve all of the existing products for the authenticated user.
      parameters:
        - name: access_token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved products
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  products:
                    type: array
                    items:
                      $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /products/{id}:
    get:
      summary: Retrieve product details
      description: Retrieve the details of a product.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: access_token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved product
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

    delete:
      summary: Delete a product
      description: Permanently delete a product.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: access_token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully deleted product
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  message:
                    type: string
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /products/{id}/enable:
    put:
      summary: Enable an existing product
      description: Enable an existing product.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: access_token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully enabled product
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /products/{id}/disable:
    put:
      summary: Disable an existing product
      description: Disable an existing product.
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
        - name: access_token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully disabled product
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  product:
                    $ref: '#/components/schemas/Product'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '404':
          $ref: '#/components/responses/NotFound'
        '500':
          $ref: '#/components/responses/ServerError'

  /user:
    get:
      summary: Retrieve user data
      description: Retrieve the authenticated user's data.
      parameters:
        - name: access_token
          in: query
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Successfully retrieved user data
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                  user:
                    $ref: '#/components/schemas/User'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '500':
          $ref: '#/components/responses/ServerError'

components:
  schemas:
    Product:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        description:
          type: string
        price:
          type: integer
        currency:
          type: string
        url:
          type: string
        tags:
          type: array
          items:
            type: string
        thumbnail_url:
          type: string
        published:
          type: boolean
        sales_count:
          type: integer
        sales_usd_cents:
          type: integer
        is_tiered_membership:
          type: boolean
        recurrences:
          type: array
          items:
            type: string
        variants:
          type: array
          items:
            $ref: '#/components/schemas/Variant'

    Variant:
      type: object
      properties:
        title:
          type: string
        options:
          type: array
          items:
            $ref: '#/components/schemas/VariantOption'

    VariantOption:
      type: object
      properties:
        name:
          type: string
        price_difference:
          type: integer
        purchasing_power_parity_prices:
          type: object
          additionalProperties:
            type: integer

    User:
      type: object
      properties:
        bio:
          type: string
        name:
          type: string
        twitter_handle:
          type: string
        user_id:
          type: string
        email:
          type: string
        url:
          type: string

  responses:
    BadRequest:
      description: Bad Request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    Unauthorized:
      description: Unauthorized
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    RequestFailed:
      description: Request Failed
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    NotFound:
      description: Not Found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'
    ServerError:
      description: Server Error
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/ErrorResponse'

    ErrorResponse:
      type: object
      properties:
        success:
          type: boolean
        message:
          type: string
